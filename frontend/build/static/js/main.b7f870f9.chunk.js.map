{"version":3,"sources":["stages/1_begin_trade.js","stages/2_export_clearance.js","stages/3_shipment_initiation.js","stages/4_shipment_boarding.js","stages/5_transfer_lading.js","config.js","utils.js","ethereum/web3.js","ethereum/contractInstance.js","components/Home.js","ethereum/factoryInstance.js","components/Factory.js","components/Header.js","components/Layout.js","components/HelloWorld.js","App.js","serviceWorker.js","index.js"],"names":["require","uploadBrowserDataToAzureFile","Aborter","SendForExportClearance","state","msg","errorMessage","loadingData","seller","bank","pod","cfDocs","cDocs","cfDocsHash","cDocsHash","cfDocsProgress","cDocsProgress","onSubmit","_callee","event","_media_pyofey_DATA_Coding_Projects_2018_10_29_azure_truffle_frontend_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","preventDefault","_this","setState","loading","props","SupplyChainInstance","methods","ExportClearance","send","from","account","uploadFileToAzure","t0","message","stop","this","_callee2","file","docType","fileName","fileURL","_context2","azureUpload","sent","none","rangeSize","parallelism","progress","ev","prgs","Math","round","loadedBytes","size","captureDocs","reader","window","FileReader","readAsArrayBuffer","onloadend","Object","_media_pyofey_DATA_Coding_Projects_2018_10_29_azure_truffle_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","buffer","spark","hash","_context3","Buffer","result","SparkMD5","ArrayBuffer","append","end","toString","err","console","log","document","title","statusMessage","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","active","inverted","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","floating","positive","header","content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","trigger","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","primary","Header","Content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","error","Field","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","onChange","target","value","placeholder","type","files","disabled","tate","basic","Component","ExportClearanceAction","cURL","cfURL","verifyHash","verified","downloadFileFromAzure","url","azureDownload","approveDocuments","ApproveExportDocumentation","messsage","amendDocuments","AmendExportDocumentation","rejectDocuments","_callee4","_context4","Terminate","ExportDocument","call","CustomsDocument","negative","verifyMsg","floated","color","onClick","href","download","InitiateShipment","shippingDocs","ladingDocs","shippingDocsHash","ladingDocsHash","shippingDocsProgress","ladingDocsProgress","UploadShippingDocuments","BoardingShipment","boardingDocs","boardingDocsHash","boardingDocsProgress","UploadFinalBillOfLading","AmendBillOfLading","TansferLading","config","accountSAS","AnonymousCredential","FileURL","DirectoryURL","ShareURL","ServiceURL","StorageURL","_x","_azureUpload","apply","arguments","accountSas","pipeline","serviceURL","shareURL","directoryURL","regenerator_default","newPipeline","retryOptions","maxTries","telemetry","concat","fromServiceURL","fromShareURL","fromDirectoryURL","abrupt","storageClientContext","web3","eth","getAccounts","alert","Web3","currentProvider","get_account","provider","providers","HttpProvider","net","getNetworkType","netId","helloWorldInstance","Contract","PostBox","abi","address","SupplyChainTransportation","Home","contractState","instanceShipper","instanceOriginCustoms","accounts","supplychain_instance","match","params","chainAddress","State","InstanceOriginCustoms","InstanceShipper","InstanceFreightCarrier","instanceFreightCarrier","react_default","Dimmer","Loader","_1_begin_trade","_2_export_clearance","_3_shipment_initiation","_4_shipment_boarding","_5_transfer_lading","FactoryInstance","SupplychainFactory","Factory","description","freightCarrierAddress","originCustomsAddress","consigneeAddress","deployedChains","_this$state","deployedAddress","createSupplyChain","getDeployedSupplyChain","arr","i","length","Description","contractDesc","push","items","map","chainDets","meta","fluid","style","overflowWrap","Card","Group","Message","Grid","stackable","Column","width","renderChains","Row","Modal","Button","icon","labelPosition","Icon","name","Form","Input","Menu","marginTop","Item","Link","to","position","Layout","Container","rel","children","HelloWorld","msgVal","existingMsg","res","postMsg","getMsg","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7f870f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Button, Input, Message, Modal} from 'semantic-ui-react';\nimport SparkMD5 from 'spark-md5';\nimport {azureUpload} from \"../utils\";\n\nconst {uploadBrowserDataToAzureFile, Aborter} = require(\"@azure/storage-file\");\n\nclass SendForExportClearance extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    seller:'',\n    bank:'',\n    pod:'',\n    cfDocs:'',\n    cDocs:'',\n    cfDocsHash:'',\n    cDocsHash:'',\n    cfDocsProgress:0,\n    cDocsProgress:0\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();    \n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      await this.props.SupplyChainInstance.methods.ExportClearance(this.state.seller,this.state.pod, this.state.bank, this.state.cfDocsHash, this.state.cDocsHash).send({from:this.props.account});\n      this.uploadFileToAzure(this.state.cfDocs, \"cfDocs\", this.state.cfDocsHash);\n      this.uploadFileToAzure(this.state.cDocs, \"cDocs\", this.state.cDocsHash);\n      this.setState({msg:'Successfully uploaded!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  uploadFileToAzure = async (file, docType, fileName) => {\n    this.setState({loading:true});\n    const fileURL = await azureUpload(fileName);\n    \n    await uploadBrowserDataToAzureFile(Aborter.none, file, fileURL, {\n      rangeSize: 4 * 1024 * 1024, // 4MB range size\n      parallelism: 20, // 20 concurrency\n      progress: ev => {\n        let prgs = Math.round(ev.loadedBytes * 10000/file.size)/100;\n        if (docType === 'cfDocs'){\n          this.setState({cfDocsProgress: prgs});\n        }else{\n          this.setState({cDocsProgress: prgs});\n        }\n      }\n    });\n\n    this.setState({loading:false});\n  }\n  \n  captureDocs = (file, docType) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          if (docType === 'cfDocs'){\n            this.setState({cfDocsHash:hash.toString()});\n          }else{\n            this.setState({cDocsHash:hash.toString()});\n          }\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <b>Contract State:</b> Begin Trade<br/>\n        <Modal trigger={<Button primary>Export Clearance</Button>}>\n          <Modal.Header>Upload Export Clearance Docs</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Seller</label>\n                <Input onChange={event => this.setState({seller:event.target.value})} placeholder='<string>' />\n              </Form.Field>\n              <Form.Field>\n                <label>Port Of Discharge</label>\n                <Input onChange={event => this.setState({pod:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Origin Bank</label>\n                <Input onChange={event => this.setState({bank:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Filing Docs</label>\n                <Input type='file' onChange={event => {this.setState({cfDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], 'cfDocs')}} />\n                {this.state.cfDocsHash &&\n                  <div>\n                    File Hash: {this.state.cfDocsHash} <br/>\n                    Upload Progress: {this.state.cfDocsProgress}%  \n                  </div>\n                }\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Docs</label>\n                <Input type='file' onChange={event => {this.setState({cDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], 'cDocs')}} />\n                {this.state.cDocsHash &&\n                  <div>\n                    File Hash: {this.state.cDocsHash} <br/>\n                    Upload Progress: {this.state.cDocsProgress}%  \n                </div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} disabled={this.tate.loading} primary basic type='submit'>Submit</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default SendForExportClearance;","import React, { Component } from 'react';\nimport {Loader, Dimmer, Button, Message, Modal, Form, Input} from 'semantic-ui-react';\nimport {azureDownload} from \"../utils\";\nimport SparkMD5 from 'spark-md5';\n\nclass ExportClearanceAction extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    cURL:'',\n    cfURL:'',\n    verifyHash:'',\n    verified:false,\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n\n    const cfDocsHash = await this.props.SupplyChainInstance.methods.ExportDocument().call({from:this.props.account});\n    const cDocsHash = await this.props.SupplyChainInstance.methods.CustomsDocument().call({from:this.props.account});\n    this.setState({cfDocsHash, cDocsHash});\n    this.downloadFileFromAzure('cfDocs', cfDocsHash);\n    this.downloadFileFromAzure('cDocs', cDocsHash);\n\n    this.setState({loadingData:false});\n  }\n\n  captureDocs = (file) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {          \n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          this.setState({verifyHash:hash.toString(), verified:true});\n        }\n\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  downloadFileFromAzure = async (docType, fileName) => {\n    this.setState({loading:true});\n\n    const url = azureDownload(fileName);\n\n    if (docType === 'cfDocs'){\n      this.setState({cfURL:url});\n    }else{\n      this.setState({cURL: url});\n    }\n\n    this.setState({loading:false});\n  }\n\n  approveDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.ApproveExportDocumentation().send({from:this.props.account});\n      this.setState({msg:'Documents Approved!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  amendDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.AmendExportDocumentation().send({from:this.props.account});\n      this.setState({msg:'Documents Amend Requested!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  rejectDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.Terminate().send({from:this.props.account});\n      this.setState({msg:'Documents Rejected!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else if (this.state.msg){\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }else if (this.state.errorMessage){\n      statusMessage = <Message floating negative header=\"Oops!\" content={this.state.errorMessage} />;\n    }\n\n    let verifyMsg ='';\n    if (this.state.verifyHash===this.state.cfDocsHash || this.state.verifyHash===this.state.cDocsHash){\n      verifyMsg = \"File is successfully verified. Integrity check successfully passed!\";\n    }else{\n      verifyMsg = \"Integrity check not passed or file is different:/\";\n    }\n  \n    return (\n      <div>\n        <b>Contract State:</b> Export Clearance<br/>\n        <Modal size={'mini'} trigger={<Button primary>Approve Documentation</Button>}>\n          <Modal.Header>Approve Documents</Modal.Header>\n          <Modal.Content>\n            Approve Documents?\n            <Button floated='right' color='green' loading={this.state.loading} primary basic onClick={this.approveDocuments}>Approve</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <Modal size={'mini'} trigger={<Button primary>Amend Documentation</Button>}>\n          <Modal.Header>Send Document Amend Request</Modal.Header>\n          <Modal.Content>\n            Amend Documents?\n            <Button floated='right' color='yellow' loading={this.state.loading} primary basic onClick={this.amendDocuments}>Amend</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <Modal size={'mini'} trigger={<Button primary>Reject</Button>}>\n          <Modal.Header>Reject Export Clearance</Modal.Header>\n          <Modal.Content>\n            Reject Documents?\n            <Button floated='right' color='red' loading={this.state.loading} primary basic onClick={this.rejectDocuments}>Reject</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <br/><br/>\n        <a href={this.state.cfURL} download={this.state.cfURL}><Button primary>Download Export Docs</Button></a>\n        <a href={this.state.cURL} download={this.state.cfURL}><Button primary>Download Customs Docs</Button></a>\n\n        <br/><br/>\n\n        <Modal trigger={<Button primary>Verify Document</Button>}>\n          <Modal.Header>Verify The Downloaded Documents</Modal.Header>\n          <Modal.Content>\n            <Form error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Choose either Customs or Exports Document</label>\n                <Input type='file' onChange={event => {this.captureDocs(event.target.files[0])}} />\n                {this.state.verified && verifyMsg!=='' &&\n                  <div>{verifyMsg}</div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} disabled={this.state.loading} primary basic type='submit'>Verify</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default ExportClearanceAction;","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Button, Input, Message, Modal} from 'semantic-ui-react';\nimport SparkMD5 from 'spark-md5';\nimport {azureUpload} from \"../utils\";\nconst {uploadBrowserDataToAzureFile, Aborter} = require(\"@azure/storage-file\");\n\nclass InitiateShipment extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    shippingDocs:'',\n    ladingDocs:'',\n    shippingDocsHash:'',\n    ladingDocsHash:'',\n    shippingDocsProgress:0,\n    ladingDocsProgress:0,\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();    \n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      await this.props.SupplyChainInstance.methods.UploadShippingDocuments(this.state.shippingDocsHash, this.state.ladingDocsHash).send({from:this.props.account});\n      await this.uploadFileToAzure(this.state.shippingDocs, 'shippingDocs', this.state.shippingDocsHash);\n      await this.uploadFileToAzure(this.state.shippingDocs, 'ladingDocs', this.state.shippingDocsHash);\n      \n      this.setState({msg:'Successfully uploaded!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  uploadFileToAzure = async (file, docType, fileName) => {\n    this.setState({loading:true});\n    const fileURL = await azureUpload(fileName);\n    \n    await uploadBrowserDataToAzureFile(Aborter.none, file, fileURL, {\n      rangeSize: 4 * 1024 * 1024, // 4MB range size\n      parallelism: 20, // 20 concurrency\n      progress: ev => {\n        let prgs = Math.round(ev.loadedBytes * 10000/file.size)/100;\n        if (docType === 'shippingDocs'){\n          this.setState({shippingDocsProgress: prgs});\n        }else{\n          this.setState({ladingDocsProgress: prgs});\n        }\n      }\n    });\n\n    this.setState({loading:false});\n  }\n\n  captureDocs = (file, docType) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          if (docType === 'shippingDocs'){\n            this.setState({shippingDocsHash: hash.toString()});\n          }else{\n            this.setState({ladingDocsHash: hash.toString()});\n          }\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <b>Contract State:</b> Shipment Initiation<br/>\n        <Modal trigger={<Button primary>Upload Docs</Button>}>\n          <Modal.Header>Upload Shipping Docs</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Shipping Docs</label>\n                <Input type='file' onChange={event => {this.setState({shippingDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], \"shippingDocs\")}} />\n                {this.state.shippingDocsHash &&\n                  <div>\n                    File Hash: {this.state.shippingDocsHash} <br/>\n                    Upload Progress: {this.state.shippingDocsProgress}%  \n                  </div>\n                }\n              </Form.Field>\n              <Form.Field>\n                <label>Draft Bill of Lading</label>\n                <Input type='file' onChange={event => {this.setState({ladingDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], \"ladingDocs\")}} />\n                {this.state.ladingDocsHash &&\n                  <div>\n                    File Hash: {this.state.ladingDocsHash} <br/>\n                    Upload Progress: {this.state.ladingDocsProgress}%  \n                  </div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} disabled={this.state.loading} primary basic type='submit'>Submit</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default InitiateShipment;","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Button, Input, Message, Modal} from 'semantic-ui-react';\nimport SparkMD5 from 'spark-md5';\nimport {azureUpload} from \"../utils\";\nconst {uploadBrowserDataToAzureFile, Aborter} = require(\"@azure/storage-file\");\n\nclass BoardingShipment extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    boardingDocs:'',\n    boardingDocsHash:'',\n    boardingDocsProgress:0,\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();    \n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      await this.props.SupplyChainInstance.methods.UploadFinalBillOfLading(this.state.boardingDocsHash).send({from:this.props.account});\n      await this.uploadFileToAzure(this.state.boardingDocs, this.state.boardingDocsHash);\n      this.setState({msg:'Successfully uploaded!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  uploadFileToAzure = async (file, fileName) => {\n    this.setState({loading:true});\n    const fileURL = await azureUpload(fileName);\n    \n    await uploadBrowserDataToAzureFile(Aborter.none, file, fileURL, {\n      rangeSize: 4 * 1024 * 1024, // 4MB range size\n      parallelism: 20, // 20 concurrency\n      progress: ev => {\n        let prgs = Math.round(ev.loadedBytes * 10000/file.size)/100;\n        this.setState({boardingDocsProgress: prgs});\n      }\n    });\n\n    this.setState({loading:false});\n  }\n\n  captureDocs = (file) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          this.setState({boardingDocsHash:hash.toString()});\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  amendDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.AmendBillOfLading().send({from:this.props.account});\n      this.setState({msg:'Documents Amend Requested!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <b>Contract State:</b> Shipment Boarding<br/>\n        <Modal size={'mini'} trigger={<Button primary>Amend Docs</Button>}>\n          <Modal.Header>Send Documents Amend Request</Modal.Header>\n          <Modal.Content>\n            Amend Documents?\n            <Button floated='right' color='yellow' loading={this.state.loading} primary basic onClick={this.amendDocuments}>Amend</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <Modal trigger={<Button primary>Upload Docs</Button>}>\n          <Modal.Header>Upload Shipping Docs</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Final Bill Of Lading Docs</label>\n                <Input type='file' onChange={event => {this.setState({boardingDocs:event.target.files[0]}); this.captureDocs(event.target.files[0])}} />\n                {this.state.boardingDocsHash &&\n                  <div>\n                    File Hash: {this.state.boardingDocsHash} <br/>\n                    Upload Progress: {this.state.boardingDocsProgress}%  \n                  </div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} disabled={this.state.loading} primary basic type='submit'>Submit</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default BoardingShipment;","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Button, Input, Message, Modal} from 'semantic-ui-react';\nimport SparkMD5 from 'spark-md5';\nimport {azureUpload} from \"../utils\";\n\nconst {uploadBrowserDataToAzureFile, Aborter} = require(\"@azure/storage-file\");\n\nclass TansferLading extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    seller:'',\n    bank:'',\n    pod:'',\n    cfDocs:'',\n    cDocs:'',\n    cfDocsHash:'',\n    cDocsHash:'',\n    cfDocsProgress:0,\n    cDocsProgress:0\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();    \n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      await this.props.SupplyChainInstance.methods.ExportClearance(this.state.seller,this.state.pod, this.state.bank, this.state.cfDocsHash, this.state.cDocsHash).send({from:this.props.account});\n      this.uploadFileToAzure(this.state.cfDocs, \"cfDocs\", this.state.cfDocsHash);\n      this.uploadFileToAzure(this.state.cDocs, \"cDocs\", this.state.cDocsHash);\n      this.setState({msg:'Successfully uploaded!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  uploadFileToAzure = async (file, docType, fileName) => {\n    this.setState({loading:true});\n    const fileURL = await azureUpload(fileName);\n    \n    await uploadBrowserDataToAzureFile(Aborter.none, file, fileURL, {\n      rangeSize: 4 * 1024 * 1024, // 4MB range size\n      parallelism: 20, // 20 concurrency\n      progress: ev => {\n        let prgs = Math.round(ev.loadedBytes * 10000/file.size)/100;\n        if (docType === 'cfDocs'){\n          this.setState({cfDocsProgress: prgs});\n        }else{\n          this.setState({cDocsProgress: prgs});\n        }\n      }\n    });\n\n    this.setState({loading:false});\n  }\n  \n  captureDocs = (file, docType) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          if (docType === 'cfDocs'){\n            this.setState({cfDocsHash:hash.toString()});\n          }else{\n            this.setState({cDocsHash:hash.toString()});\n          }\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <b>Contract State:</b> Begin Trade<br/>\n        <Modal trigger={<Button primary>Export Clearance</Button>}>\n          <Modal.Header>Upload Export Clearance Docs</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Seller</label>\n                <Input onChange={event => this.setState({seller:event.target.value})} placeholder='<string>' />\n              </Form.Field>\n              <Form.Field>\n                <label>Port Of Discharge</label>\n                <Input onChange={event => this.setState({pod:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Origin Bank</label>\n                <Input onChange={event => this.setState({bank:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Filing Docs</label>\n                <Input type='file' onChange={event => {this.setState({cfDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], 'cfDocs')}} />\n                {this.state.cfDocsHash &&\n                  <div>\n                    File Hash: {this.state.cfDocsHash} <br/>\n                    Upload Progress: {this.state.cfDocsProgress}%  \n                  </div>\n                }\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Docs</label>\n                <Input type='file' onChange={event => {this.setState({cDocs:event.target.files[0]}); this.captureDocs(event.target.files[0], 'cDocs')}} />\n                {this.state.cDocsHash &&\n                  <div>\n                    File Hash: {this.state.cDocsHash} <br/>\n                    Upload Progress: {this.state.cDocsProgress}%  \n                </div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} disabled={this.tate.loading} primary basic type='submit'>Submit</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TansferLading;","const config = {\n    accountSAS:\"?sv=2018-03-28&ss=bfqt&srt=sco&sp=rwdlacup&se=2019-04-05T12:16:51Z&st=2019-01-03T04:16:51Z&spr=https&sig=evHty2n7TtrLLpQWy4uQP%2FMlcHJIgmAG8y0AJOwwtTY%3D\",\n};\n\nexport default config;","import config from \"./config\";\nconst {\n  AnonymousCredential,\n  FileURL,\n  DirectoryURL,\n  ShareURL,\n  ServiceURL,\n  StorageURL\n} = require(\"@azure/storage-file\");\n\n\nexport async function azureUpload(fileName) {\n  const account = \"uploadcustomsfiles\";\n  const accountSas = config.accountSAS;\n\n  const pipeline = StorageURL.newPipeline(new AnonymousCredential(), {\n    retryOptions: { maxTries: 4 }, // Retry options\n    telemetry: { value: \"HighLevelSample V1.0.0\" } // Customized telemetry string\n  });\n  \n  const serviceURL = new ServiceURL(`https://${account}.file.core.windows.net${accountSas}`,pipeline);\n  const shareName = \"uploadfileshare\";\n  const shareURL = ShareURL.fromServiceURL(serviceURL, shareName);\n    \n  const directoryName = \"uploadfiledir\";\n  const directoryURL = DirectoryURL.fromShareURL(shareURL, directoryName);\n  const fileURL = FileURL.fromDirectoryURL(directoryURL, fileName);\n  \n  return fileURL;\n};\n\n\nexport function azureDownload(fileName){\n  const account = \"uploadcustomsfiles\";\n  const accountSas = config.accountSAS;\n\n  const pipeline = StorageURL.newPipeline(new AnonymousCredential(), {\n    retryOptions: { maxTries: 4 }, // Retry options\n    telemetry: { value: \"HighLevelSample V1.0.0\" } // Customized telemetry string\n  });\n  \n  const serviceURL = new ServiceURL(`https://${account}.file.core.windows.net${accountSas}`,pipeline);\n  const shareName = \"uploadfileshare\";\n  const shareURL = ShareURL.fromServiceURL(serviceURL, shareName);\n    \n  const directoryName = \"uploadfiledir\";\n  const directoryURL = DirectoryURL.fromShareURL(shareURL, directoryName);\n  const fileURL = FileURL.fromDirectoryURL(directoryURL, fileName);\n  return fileURL.storageClientContext.url;\n}","import Web3 from 'web3';\n\nlet web3, defaultAcc;\nfunction networkCheck(){\n  web3.eth.net.getNetworkType((err, netId) => {\n  switch (netId) {\n    case \"main\":\n    alert(\"This is Mainnet. Please switch to Azure PoA Network!\");\n    break\n    case \"ropsten\":\n    alert(\"This is Ropsten test network. Please switch to Azure PoA Network!\");\n    break\n    case \"rinkeby\":\n    alert(\"This is Rinkeby test network! Please switch to Azure PoA Network!\");\n    break\n    case \"kovan\":\n    alert(\"This is Kovan test network. Please switch to Azure PoA Network!\");\n    break\n    default:\n    //alert(\"Nice! It looks like you're connected to Azure PoA Network!\");\n  }\n  })\n}\n\nasync function get_account(){\n  defaultAcc = await web3.eth.getAccounts();\n  if (defaultAcc[0] == null){\n    // User is not logged in\n    alert(\"Please Login To MetaMask And Refresh Page\");\n  }\n}\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n\n  //const provider = new Web3.providers.HttpProvider(\"http://ethygqbek-dns-reg1.eastus.cloudapp.azure.com:8540\");\n  //web3 = new Web3(provider);\n  web3 = new Web3(window.web3.currentProvider);\n  get_account();\n  \n}else{\n  // User is not running metamask\n\n  alert(\"Please Install MetaMask from metamask.io\");\n  const provider = new Web3.providers.HttpProvider(\"http://ethygqbek-dns-reg1.eastus.cloudapp.azure.com:8540\");\n  web3 = new Web3(provider);\n}\n\nnetworkCheck();\n\nexport default web3;","import web3 from './web3';\nimport PostBox from './build/contracts/PostBox.json';\nimport SupplyChainTransportation from './build/contracts/SupplyChainTransportation.json';\n\n//var address = \"0xdcca47d0396ccdd76fbfe9dc779f619184df9357\";\n//var abi = [{\"constant\": false,\"inputs\": [{\"name\": \"text\",\"type\": \"string\"}],\"name\": \"postMsg\",\"outputs\": [],\"payable\": false,\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"constant\": true,\"inputs\": [],\"name\": \"getMsg\",\"outputs\": [{\"name\": \"\",\"type\": \"string\"}],\"payable\": false,\"stateMutability\": \"view\",\"type\": \"function\"}];\n//const ContractInstance = new web3.eth.Contract(abi, address);\n\nexport const helloWorldInstance = new web3.eth.Contract(PostBox.abi, \"0x7d0a7af75b095b3fb1d6dbda31577e77a59bd2f6\");\n\n//export const SupplyChainInstance = new web3.eth.Contract(SupplyChainTransportation.abi, \"0x5250b6be5568fd58b6244bb79c6a3a0ae9d9b87b\"); // No Factory; state=0; Begin trade\n//export const SupplyChainInstance = new web3.eth.Contract(SupplyChainTransportation.abi, \"0xbc99706eb7bcf79f2af24b784ce501ad4bd91399\"); // No Factory; state=1; Export Clearance\n\nexport const SupplyChainInstance = (address) => {\n\treturn new web3.eth.Contract(SupplyChainTransportation.abi, address); // With Facotry\n}","import React, { Component } from \"react\";\nimport {Loader, Dimmer} from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport {SupplyChainInstance as supplychain_instance} from \"../ethereum/contractInstance\";\nimport SendForExportClearance from \"../stages/1_begin_trade\";\nimport ExportClearanceAction from \"../stages/2_export_clearance\";\nimport InitiateShipment from \"../stages/3_shipment_initiation\";\nimport BoardingShipment from \"../stages/4_shipment_boarding\";\nimport TransferLading from \"../stages/5_transfer_lading\";\n\nclass Home extends Component {\n    state = {\n    msg:'',\n    loadingData:false,\n    account:'',\n    SupplyChainInstance:'',\n    contractState:'',\n    instanceShipper:'',\n    instanceOriginCustoms:'',\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n\n    const accounts = await web3.eth.getAccounts();\n    const SupplyChainInstance = await supplychain_instance(this.props.match.params.chainAddress);\n    let contractState = await SupplyChainInstance.methods.State().call({from:accounts[0]});\n    \n    let instanceOriginCustoms = await SupplyChainInstance.methods.InstanceOriginCustoms().call({from:accounts[0]});\n    let instanceShipper = await SupplyChainInstance.methods.InstanceShipper().call({from:accounts[0]});\n    let instanceFreightCarrier = await SupplyChainInstance.methods.InstanceFreightCarrier().call({from: accounts[0]});\n\n    this.setState({loadingData:false, account:accounts[0], SupplyChainInstance, contractState, instanceShipper, instanceOriginCustoms, instanceFreightCarrier});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <h1>Supplychain Transportation</h1>\n        {this.state.instanceShipper===this.state.account && this.state.contractState==='0' &&\n          <SendForExportClearance account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n        {this.state.instanceOriginCustoms===this.state.account && this.state.contractState==='1' &&\n          <ExportClearanceAction account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n        {this.state.instanceShipper===this.state.account && this.state.contractState==='2' &&\n          <InitiateShipment account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n        {this.state.instanceFreightCarrier===this.state.account && this.state.contractState==='3' &&\n          <BoardingShipment account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n        {this.state.instanceFreightCarrier===this.state.account && this.state.contractState==='4' &&\n          <TransferLading account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Home;","import web3 from './web3';\nimport SupplychainFactory from './build/contracts/SupplychainFactory.json';\n\n//export const FactoryInstance = new web3.eth.Contract(SupplychainFactory.abi, \"0x8719f6d485bc53acae485ebbdd73e1f739e490d2\");\nexport const FactoryInstance = new web3.eth.Contract(SupplychainFactory.abi, \"0xf0a2631c8895947933424dbe605422c346023c4d\");\n","import React, { Component } from 'react';\nimport { Loader, Dimmer, Form, Input, Message, Button, Card, Modal, Grid, Icon } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport { FactoryInstance } from '../ethereum/factoryInstance';\nimport { SupplyChainInstance as supplychain_instance } from '../ethereum/contractInstance';\n\nclass Factory extends Component {\n  state = {\n    msg: '',\n    errorMessage: '',\n    loadingData: false,\n    account: '',\n    description: '',\n    freightCarrierAddress: '',\n    originCustomsAddress: '',\n    consigneeAddress: '',\n    deployedChains: [],\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = \"Azure UI\";\n\n    const accounts = await web3.eth.getAccounts();\n    let deployedChains = await FactoryInstance.methods.getDeployedSupplyChain().call({ from: accounts[0] });\n\n    let arr = [];\n    for (var i = 0; i < deployedChains.length; i++) {\n      const SupplyChainInstance = await supplychain_instance(deployedChains[i]);\n      let contractDesc = await SupplyChainInstance.methods.Description().call({ from: accounts[0] });\n      arr.push([deployedChains[i], contractDesc]);\n    }\n\n    this.setState({ loadingData: false, account: accounts[0], deployedChains: arr });\n  }\n\n  renderChains() {\n    const items = this.state.deployedChains.map(chainDets => {\n      return {\n        href: '/UI-project/' + chainDets[0],\n        header: \"Address: \" + chainDets[0],\n        description: 'Description: ' + chainDets[1],\n        meta: \"Click for Details\",\n        fluid: true,\n        style: { overflowWrap: 'break-word' },\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ errorMessage: '', loading: true, msg: '' });\n\n    try {\n      let { description, freightCarrierAddress, originCustomsAddress, consigneeAddress, account } = this.state;\n      let deployedAddress = await FactoryInstance.methods.createSupplyChain(description, freightCarrierAddress, originCustomsAddress, consigneeAddress).send({ from: account });\n      console.log(deployedAddress);\n      this.setState({ msg: 'Contract deployed successfully!' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '') {\n      statusMessage = null;\n    } else {\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n        <h1>Deployed Supplychain Transportation Contracts</h1>\n        <Grid stackable>\n          <Grid.Column width={12}>\n            {this.state.deployedChains.length > 0 && this.renderChains()}\n            {this.state.deployedChains.length === 0 && <p>No contracts deployed!</p>}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Grid.Row>\n              <Modal trigger={<Button primary icon labelPosition='right'><Icon name='plus circle' />Create New Contract</Button>}>\n                <Modal.Header>Supplychain Transportation Factory</Modal.Header>\n                <Modal.Content>\n                  <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                      <label>Description</label>\n                      <Input onChange={event => this.setState({ description: event.target.value })} />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Freight Carrier Address</label>\n                      <Input onChange={event => this.setState({ freightCarrierAddress: event.target.value })} />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Oigin Customs Address</label>\n                      <Input onChange={event => this.setState({ originCustomsAddress: event.target.value })} />\n                    </Form.Field>\n                    <Form.Field>\n                      <label>Consignee Address</label>\n                      <Input onChange={event => this.setState({ consigneeAddress: event.target.value })} />\n                    </Form.Field>\n                    <Button loading={this.state.loading} primary basic type='submit'>Deploy</Button>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                    {statusMessage}\n                  </Form>\n                </Modal.Content>\n              </Modal>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Factory;","import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\n\nexport default () => {\n  return (\n    <Menu style={{ marginTop:'0px',}} size={'large'}>\n      <Menu.Item><Link to='/UI-project'>Azure UI</Link></Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item><Link to='/UI-project/frontend/helloworld'><Icon name='tasks' />Hello World!</Link></Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  );\n};","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport Header from './Header';\n\nexport default props => {\n  return (\n    <Container>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"></link>\n      <Header />\n      {props.children}\n    </Container>\n  );\n};","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Input, Button, Message} from 'semantic-ui-react';\n//import {Link} from 'react-router-dom';\nimport web3 from '../ethereum/web3';\nimport {helloWorldInstance} from '../ethereum/contractInstance';\n\nclass HelloWorld extends Component {\n    state = {\n    loadingData:false,\n    errorMessage:'',\n    msg:'',\n    msgVal:'',\n    account:'',\n    existingMsg:'',\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI | HelloWorld\";\n\n    const accounts = await web3.eth.getAccounts();\n    let res = await helloWorldInstance.methods.getMsg().call({from:accounts[0]});\n    this.setState({loadingData:false, account:accounts[0], existingMsg:res});\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({errorMessage:'', loading:true, msg:''});\n    try{\n      let res = await helloWorldInstance.methods.postMsg(this.state.msgVal).send({from:this.state.account});\n      console.log(res);\n      this.setState({msg:'Message pushed to Azure PoA blockchain!'});\n    }catch(err){\n      console.log(err);\n      this.setState({errorMessage:err.message, msg:''});\n    }\n\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n\n    if (this.state.msg === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n        <h1>Hello World Contract!</h1>\n        <h3>Existing message: {this.state.existingMsg}</h3>\n         <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Group>\n            <Form.Field width={12}>\n              <label>Enter Message</label>\n              <Input onChange={event => this.setState({msgVal:event.target.value})} />\n            </Form.Field>\n            <Button size='small' floated='right' primary basic loading={this.state.loading} disabled={this.state.loading}>\n              Push\n            </Button>\n          </Form.Group>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          {statusMessage}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default HelloWorld;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Factory from './components/Factory';\nimport Layout from './components/Layout';\nimport HelloWorld from './components/HelloWorld';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/UI-project\" component={Factory} />\n            <Route exact path=\"/UI-project/:chainAddress\" component={Home} />\n            <Route exact path=\"/UI-project/frontend/helloworld\" component={HelloWorld} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}